extends layout

block content
	body(onload='initialize()')
		- if(logged == 'true') 
			fieldset(data-role='controlgroup', style='border: 1px solid black;')
				h2(align='center') Bienvenido a la aplicación #{user}
				p(align='center')
					a(href='/?logout=1') Salir
		- else
			fieldset(data-role='controlgroup', style='border: 1px solid black;')
				h1(align='center') LOGIN
				#login-container
					form( method="post")#login-form.well.span4
						input(type="text", name="user", id='user-tf', placeholder='Usuario').span4.required
						input(type="password", name="pass", id='pass-tf', placeholder='Password').span4.required
						button(type="submit")#btn-login.btn.btn-primary Validar
						label#remember-me.checkbox Recuerdame
							input(type="checkbox", checked='checked')
						div.btm-links
							a(href='/register')#create-account Registrate
		
		fieldset(data-role='controlgroup', style='border: 1px solid black;')
			h4(align='center') Puede acceder al histórico de compras realizadas, o ver las listas de la compra guardadas...
			p(align='center') (Historico de compras solo para usuarios registrados)
			p(align='center') (Permito almacenar una lista de la compra de muestra con un producto, y le indico que se registre para almacenarla en base de datos y terminar de completar la lista)
			#login-container
				- if(logged == 'true')
					form(action='/historico',method="post")#historic-form.well.span4
						#control-group
						label.control-label Elige una lista para consultar el historico
							#controls
								select#selectbasic.input-xlarge(name='name-list-select-historic')
									each item in user_lists
										option #{item}
						button(type="submit")#btn-shopping.btn.btn-primary Consultar
						
				- else
					form(action='/list',method="post")#locallist-form.well.span4
						#control-group
						label.control-label Consulta la lista creada en local
							#controls
								select#selectbasic.input-xlarge(name='name-list-select-cookie')
									option #{user_lists}
						button(type="submit")#btn-shopping.btn.btn-primary Consultar
		
		h1(align='center') FORMULARIO PARA AÑADIR LISTA
		h4(align='center') 1)Si añades un nombre se crea la lista automáticamente... si eliges la lisa del combo, se añade el producto a la lista existente.
		h4(align='center') 2)Abajo del formulario añado un mapa para que asocies la lista a un supermercado en el mapa.
		
		fieldset(data-role='controlgroup', style='border: 0px solid black;')
			#login-container
				form(action='/shopping_list',method="post")#shopping-form.well.span4
					#control-group
						label.control-label Crea una lista nueva de la compra...
							#controls
								input(type="text", name="name-list-input", id='name-list', placeholder='Nombre de la lista').span4.required
								label.control-label ... o añade un producto a una lista existente.
								select#selectbasic.input-xlarge(name='name-list-select')
									- if(logged == 'true' && user_lists != null)
										each item in user_lists
											option #{item}
									- else
										option #{user_lists}
					
					#control-group
						label.control-label Elige una clase de producto de la lista de la compra
							#controls
								select#selectbasic.input-xlarge(name='categorias')
									each item in categories
										option #{item.name}
					
					#control-group
						label.control-label Elige un producto de la lista.
							#controls
								select#selectbasic.input-xlarge(name='productos')
									each item in products
										option #{item.name}
					#control-group
						label.control-label Elige la cantidad a comprar en la medida correspondiente.
							#controls
								input(type="text", name="measure", id='measure', placeholder='Cantidad a comprar').required
					
					input(type='hidden', value=, name="jb_point")#jb_point
					input(type='hidden', value=, name="kb_point")#kb_point
					button(type="submit")#btn-shopping.btn.btn-primary Almacenar
					
		h4(align='center') Busca y posiciona el supermercado en el mapa.
		p(align='center') (Muestro los puntos actualizados que se van almacenar en base de datos mediante un hidden en el formulario.)
		p#y_show(align='center') 
		p#x_show(align='center')
		#map_canvas(style='width: 50%; height: 50%; margin-left: 25%;')
		//iframe(src='google_search_map.html')
	
		include modals/alert
		include modals/lost-password
	
	block scripts
		script(src='/javascripts/lib/jquery.min.js')
		script(src='/javascripts/lib/jquery.form.js')
		script(src='/javascripts/lib/bootstrap-modal.js')
		script(src='/javascripts/lib/bootstrap-transition.js')
		script(src='/javascripts/login.js')
		// GOOGLE MAPS API
		meta(name='viewport', content='initial-scale=1.0, user-scalable=no')
		style(type='text/css')
			html { height: 100% }
			body { height: 100%; margin: 0; padding: 0 }
				#map_canvas { height: 100% }
		script(type='text/javascript', src='http://maps.googleapis.com/maps/api/js?key=AIzaSyANW_yGnBPL-TYznsBtyZO8G03cvn4HV24&sensor=true')
		script(type='text/javascript')
			function initialize() {
				var map;
				var position;
				var marker;
				
				var mapOptions = {
					center: new google.maps.LatLng(40.420132, -3.705661),
					zoom: 8,
					mapTypeId: google.maps.MapTypeId.ROADMAP
				};
				map = new google.maps.Map(document.getElementById("map_canvas"),mapOptions);
				
				google.maps.event.addListener(map, 'click', 
					function(e) {
						position = e.latLng;
						placeMarker(e.latLng, map);
					}
				);
				
				function placeMarker(position, map) 
				{
					marker = new google.maps.Marker({
						position: position,
						map: map
					});
					
					// Add point to store in database
					$('#jb_point').val(position.jb);
					$('#kb_point').val(position.kb);
					
					$('#x_show').text('Punto "x" para almacenar...' + position.jb);
					$('#y_show').text('Punto "y" para almacenar...' + position.kb);
					
					// Move img to point
					var panPoint = new google.maps.LatLng(position.jb, position.kb);
					map.panTo(panPoint);
				}
			}
			
		// GOOGLE MAPS API
	

	